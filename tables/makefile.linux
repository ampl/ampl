# Makefile for Linux systems

## ampltabl.dll is for table handlers to be imported
## automatically at the start of AMPL's execution.
## It can also provide user-defined functions.
## Table handlers can also appear in shared libraries
## (DLLs) read with AMPL's "load" and "reload" commands.

.SUFFIXES: .c .o

# $S = ampl/solvers directory
S = ../solvers

CC = cc
CFLAGS = -I$S -O2 -fPIC
# you may need to add -m32 or -m64 to CFLAGS, as desired for 32- or 64-bit compilation
# The names "ampltabl.dll" and "tableproxy32" below assume 32-bit compilation.
.c.o:
	$(CC) -c $(CFLAGS) $*.c

all: simpbit.dll fullbit.dll


simpbit.dll: simpbit.o
	$(CC) -shared -o simpbit.dll simpbit.o

fullbit.dll: fullbit.o
	$(CC) -shared -o fullbit.dll fullbit.o

ampltabl.dll: tableproxy.c amplodbc.c
	$(CC) -c $(CFLAGS) -I$S -DOTHER_FUNCADD=funcaddodbc_ASL tableproxy.c
	$(CC) -c $(CFLAGS) -Dfuncadd_ASL=funcaddodbc_ASL amplodbc.c
	$(CC) $(CFLAGS) -I$S -shared -o ampltabl.dll tableproxy.o amplodbc.o -lodbc

tableproxy_32.dll: tableproxy.c tableproxyver.h
	$(CC) $(CFLAGS) -I$S -shared -o tableproxy_32.dll tableproxy.c

tableproxy32: tableproxy.c $S/printf.o tableproxyver.h
	$(CC) -c $(CFLAGS) -DQUOTIFY -o printf.o $S/printf.c
	$(CC) $(CFLAGS) -I$S -DSTAND_ALONE -Dsoclen_t=int -o tableproxy32 tableproxy.c printf.o $S/amplsolver.a -ldl
	rm printf.o

## Under some versions of Linux (e.g., SuSE 6.3), the search path
## for ampltabl.dll is affected by $LD_LIBRARY_PATH.

clean:
	rm -f *.o *.dll

# make xsum.out to check for transmission errors.
# This assumes you have the xsum program, whose source
# you can get from netlib, e.g.,
# http://www.netlib.org/f2c/src/xsum.c

x = \
	README \
	TABLES.RME \
	amplodbc.c \
	ampltabl.def \
	calories.tab \
	diet.mod \
	diet2a.dat \
	diettab.x \
	diettabw.x \
	dietwrit.x \
	foods.tab \
	fullbit.c \
	makefile.linux \
	makefile.vc \
	nutrients.tab \
	simpbit.c \
	tableproxy.c \
	tableproxyver.h

xsum.out: $x
	xsum $x >xsum1.out
	cmp xsum0.out xsum1.out && mv xsum1.out xsum.out || diff xsum[01].out

/*
   See dynamical_optimization1.mod


   This AMPL model was created by Hakan Kjellerstrand, hakank@gmail.com
   See also my AMPL page: http://www.hakank.org/ampl/



*/


# DOP2.mod, DOP1.mod extended with a "perfect intial guess" see data below
# The perfect intial guess was generated by AMPL: display u; and display x;
# Adrie Huesman 6/12/2004
# SETS
# no set declaration necessary!
# PARAMETERS
param Ng > 0 integer; # number of grid points
param Dt > 0; # time step
# VARIABLES
var x{1..Ng} >= -10, <=10; # discrete state variable
var u{1..Ng} >= -0, <=10; # discrete input variable
# OBJECTIVE
minimize cost: sum {j in 1..Ng} x[j]; # discrete integral approximation
# CONSTRAINTS
s.t. disx {j in 1..Ng-1}: (x[j+1] - x[j])/Dt = -x[j+1] + u[j+1];
# implicit Euler approximation
s.t. intx {j in 1..1}: x[j] = 1; # initial condition

s.t. finx {j in Ng..Ng}: x[j] = 5; # end condition
# DATA
data;
param Ng := 101;
param Dt := 0.1; # (10 - 0)/(Ng - 1)


var u [*] :=
1 0.1 18 0 35 0 52 0 69 0 86 0
2 0 19 0 36 0 53 0 70 0 87 0
3 0 20 0 37 0 54 0 71 0 88 0
4 0 21 0 38 0 55 0 72 0 89 0
5 0 22 0 39 0 56 0 73 0 90 0
6 0 23 0 40 0 57 0 74 0 91 0
7 0 24 0 41 0 58 0 75 0 92 0
8 0 25 0 42 0 59 0 76 0 93 0
9 0 26 0 43 0 60 0 77 0 94 2.819
10 0 27 0 44 0 61 0 78 0 95 10
11 0 28 0 45 0 62 0 79 0 96 10
12 0 29 0 46 0 63 0 80 0 97 10
13 0 30 0 47 0 64 0 81 0 98 10
14 0 31 0 48 0 65 0 82 0 99 10
15 0 32 0 49 0 66 0 83 0 100 10
16 0 33 0 50 0 67 0 84 0 101 10
17 0 34 0 51 0 68 0 85 0
;

var x [*] :=
1 1 27 0.0839055 53 0.00704013 79 0.000590705
2 0.909091 28 0.0762777 54 0.00640011 80 0.000537004
3 0.826446 29 0.0693433 55 0.00581829 81 0.000488186
4 0.751315 30 0.0630394 56 0.00528935 82 0.000443805
5 0.683013 31 0.0573086 57 0.0048085 83 0.000403459
6 0.620921 32 0.0520987 58 0.00437136 84 0.000366781
7 0.564474 33 0.0473624 59 0.00397397 85 0.000333438
8 0.513158 34 0.0430568 60 0.0036127 86 0.000303125
9 0.466507 35 0.0391425 61 0.00328427 87 0.000275568
10 0.424098 36 0.0355841 62 0.0029857 88 0.000250517
11 0.385543 37 0.0323492 63 0.00271427 89 0.000227742
12 0.350494 38 0.0294083 64 0.00246752 90 0.000207038
13 0.318631 39 0.0267349 65 0.0022432 91 0.000188217
14 0.289664 40 0.0243044 66 0.00203927 92 0.000171106
15 0.263331 41 0.0220949 67 0.00185388 93 0.000155551
16 0.239392 42 0.0200863 68 0.00168535 94 0.256414
17 0.217629 43 0.0182603 69 0.00153214 95 1.14219
18 0.197845 44 0.0166002 70 0.00139285 96 1.94745
19 0.179859 45 0.0150911 71 0.00126623 97 2.6795
20 0.163508 46 0.0137192 72 0.00115112 98 3.345
21 0.148644 47 0.012472 73 0.00104647 99 3.95
22 0.135131 48 0.0113382 74 0.000951336 100 4.5
23 0.122846 49 0.0103074 75 0.000864851 101 5
24 0.111678 50 0.00937041 76 0.000786228
25 0.101526 51 0.00851855 77 0.000714753
26 0.092296 52 0.00774414 78 0.000649775
;



solve;
display x;
display u;

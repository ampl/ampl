The solver "concert" uses IBM ILOG CPLEX CP Optimizer to solve
constraint programming problems or CPLEX to solve integer, mixed-integer,
linear programming, and quadratic problems, possibly involving integer
variables.  Both CP Optimizer and CPLEX are used through the Concert
API which explains the solver name.  Normally the concert solver is
invoked by AMPL's solve command, which gives the invocation

     concert stub -AMPL

in which stub.nl is an AMPL generic output file (possibly written
by "ampl -obstub" or "ampl -ogstub").  After solving the problem,
the solver writes a stub.sol file for use by ampl's solve and solution
commands.  When you run ampl, this all happens automatically if you
give the AMPL commands

     option solver concert;
     solve;

You can control the solver by setting the environment variable
concert_options appropriately (either by using ampl's option command,
or by using the shell's set and export commands before you invoke ampl).
You can put one or more (white-space separated) phrases in
$concert_options.  A few of the phrases are single words:

     Phrase       Meaning

     ilogcplex    Use IBM ILOG CPLEX optimizer.

     ilogsolver   Use IBM ILOG Constraint Programming optimizer.

Others are name-value pairs, possibly separated by '=', as in

     timelimit 600
or
     timelimit=600
or
     timelimit = 600

any of which limits CP Optimizer search time to 600 seconds.  Options such
as logverbosity, that take enumerated list of values, accept both numeric
and string values, so

     logverbosity=terse

is equivalent to

     logverbosity=1

In particular, switches that take values 0 or 1 also accept values
"off" or "on".

The following names may occur in name-value pairs.  For convenience,
the list also repeats the above single-word phrases, denoting them with
"Single-word phrase".

     Name               Comment

     alldiffinferencelevel
                        Inference level for 'alldiff' constraints.
                        Possible values:
                              0 = default
                              1 = low
                              2 = basic
                              3 = medium
                              4 = extended

     branchlimit        Limit on the number of branches made before
                        terminating a search.  Default = no limit.

     choicepointlimit   Limit on the number of choice points created
                        before terminating a search.  Default = no limit.

     constraintaggregation
                        0 or 1 (default 1):  Whether to aggregate basic
                        constraints.

     debugexpr          0 or 1 (default 0):  Whether to print debugging
                        information for expression trees.

     defaultinferencelevel
                        Default inference level for constraints.
                        Possible values:
                              1 = low
                              2 = basic
                              3 = medium
                              4 = extended

     distributeinferencelevel
                        Inference level for 'distribute' constraints.
                        Possible values:
                              0 = default
                              1 = low
                              2 = basic
                              3 = medium
                              4 = extended

     dynamicprobing     Use probing during search.  Possible values:
                             -1 = auto (default)
                              0 = off
                              1 = on

     dynamicprobingstrength
                        Effort dedicated to dynamic probing as a factor of
                        the total search effort.  Default = 0.03. 

     faillimit          Limit on the number of failures allowed before
                        terminating a search.  Default = no limit.

     ilogcplex          Single-word phrase:  use IBM ILOG CPLEX optimizer.

     ilogsolver         Single-word phrase:  use IBM ILOG Constraint
                        Programming optimizer.

     logperiod          Specifies how often the information in the search
                        log is displayed.

     logverbosity       Verbosity of the search log.  Possible values:
                              0 = quiet
                              1 = terse
                              2 = normal (default)
                              3 = verbose

     multipointnumberofsearchpoints
                        Number of solutions for the multi-point search
                        algorithm.  Default = 30.

     optimalitytolerance
                        Absolute tolerance on the objective value.
                        Default = 0.

     outlev             Synonym for "logverbosity".

     propagationlog     Level of propagation trace reporting.
                        Possible values:
                              0 = quiet (default)
                              1 = terse
                              2 = normal
                              3 = verbose

     randomseed         Seed of the random number generator.  Default = 0.

     relativeoptimalitytolerance
                        Relative tolerance on the objective value.
                        Default = 1e-4.

     restartfaillimit   Number of failures allowed before restarting search.
                        Default = 100.

     restartgrowthfactor
                        Increase of the number of allowed failures before
                        restarts.  Default = 1.05.

     searchtype         Type of search used for solving a problem.
                        Possible values:
                              0 = depthfirst
                              1 = restart (default)
                              2 = multipoint

     solutionlimit      Limit on the number of feasible solutions found
                        before terminating a search.  Default = no limit.

     temporalrelaxation
                        0 or 1 (default 1):  Whether to use temporal relaxation.

     timelimit          Limit on the CPU time spent solving before
                        terminating a search.  Default = no limit.

     timemode           Specifies how the time is measured in CP Optimizer.
                        Possible values:
                              0 = cputime (default)
                              1 = elapsedtime

     timing             0 or 1 (default 0):  Whether to display timings for
                        the run.

     usenumberof        0 or 1 (default 1):  Whether to consolidate 'numberof'
                        expressions by use of IloDistribute constraints.

     workers            Number of workers to run in parallel to solve a problem.
                        In addition to numeric values this option accepts the
                        value "auto" since CP Optimizer version 12.3.
                        Default = 1.

-----------------------
solve_result_num values
=======================

Here is a table of solve_result_num values that "concert" can return
to an AMPL session, along with the text that appears in the associated
solve_message.

        Value   Message

          0     optimal solution
        100     feasible solution
        200     infeasible problem
        201     infeasible or unbounded problem
        300     unbounded problem
        500     error

-------------------

If you invoke "concert stub -AMPL" or "concert stub", you can also
supply additional command-line arguments of the form name=value.
Such arguments override specifications in $concert_options.  Example:

     ampl -obfoo foo.model foo.data
     nohup concert -s foo timing=1 2>>times&

to solve a problem whose solution will take a while; after it finishes,

     ampl foo.model foo.data -
     solution foo.sol;
     display ... /* things involving the computed solution */;

(Here, - denotes standard input, and ampl reads the "solution..."
and "display..." lines.)

*************************

If you have questions about or find bugs with this stuff,
please contact:

     Victor Zverovich
     viz@ampl.com
